/* Copyright (c) 2007 Cyrus Daboo. All rights reserved.  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. */#include "Sticns.h"#include <LBevelButton.h>#include <LIconControl.h>#include <LImageWell.h>#include <UMemoryMgr.h>Sticns::Sticns(LBevelButton* /* bbtn */, short resid){	mResID = resid;	mSuiteRef = NULL;}Sticns::Sticns(LBevelButton* bbtn, ControlContentType contentType, short resid){	mResID = resid;	mSuiteRef = NULL;	if (Load(contentType, resid))	{		ControlButtonContentInfo info;		info.contentType = kControlContentIconSuiteHandle;		info.u.iconSuite = mSuiteRef;		bbtn->SetContentInfo(info);	}}Sticns::Sticns(LIconControl* ictrl, ControlContentType contentType, short resid){	mResID = resid;	mSuiteRef = NULL;	if (Load(contentType, resid))	{		ControlButtonContentInfo info;		info.contentType = kControlContentIconSuiteHandle;		info.u.iconSuite = mSuiteRef;		ictrl->SetDataTag(0, kControlIconContentTag, sizeof(ControlButtonContentInfo), &info);	}}Sticns::Sticns(LImageWell* iwell, ControlContentType contentType, short resid){	mResID = resid;	mSuiteRef = NULL;	if (Load(contentType, resid))	{		ControlButtonContentInfo info;		info.contentType = kControlContentIconSuiteHandle;		info.u.iconSuite = mSuiteRef;		iwell->SetContentInfo(info);	}}Sticns::~Sticns(){	Dispose();}bool Sticns::Load(LBevelButton* bbtn, ControlContentType contentType, short resid){	if (Load(contentType, resid))	{		ControlButtonContentInfo info;		info.contentType = kControlContentIconSuiteHandle;		info.u.iconSuite = mSuiteRef;		bbtn->SetContentInfo(info);				return true;	}	else		return false;}bool Sticns::Load(LIconControl* ictrl, ControlContentType contentType, short resid){	if (Load(contentType, resid))	{		ControlButtonContentInfo info;		info.contentType = kControlContentIconSuiteHandle;		info.u.iconSuite = mSuiteRef;		ictrl->SetDataTag(0, kControlIconContentTag, sizeof(ControlButtonContentInfo), &info);				return true;	}	else		return false;}bool Sticns::Load(LImageWell* iwell, ControlContentType contentType, short resid){	if (Load(contentType, resid))	{		ControlButtonContentInfo info;		info.contentType = kControlContentIconSuiteHandle;		info.u.iconSuite = mSuiteRef;		iwell->SetContentInfo(info);				return true;	}	else		return false;}bool Sticns::Load(ControlContentType contentType, short resid){	Dispose();	if ((contentType == kControlContentIconSuiteRes) || (contentType == kControlContentIconSuiteHandle))	{		StResource icns('icns', resid, false);		if (icns.IsValid())		{			if (::IconFamilyToIconSuite((IconFamilyHandle)icns.Get(), kSelectorAllAvailableData, &mSuiteRef) == noErr)				mResID = resid;		}	}		return mSuiteRef != NULL;}void Sticns::Dispose(){	if (mSuiteRef)	{		mResID = 0;		::DisposeIconSuite(mSuiteRef, true);	}	mSuiteRef = NULL;}